generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]

  @@unique([email])
  @@map("user")
}

model Category {
  id   String @id @default(cuid())
  name String
  slug String @unique

  parent   Category? @relation("CategoryToSubcategories", fields: [parentId], references: [id])
  parentId String?

  children Category[] @relation("CategoryToSubcategories")

  items Item[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id String @id @default(cuid())

  title       String
  description String
  price       Decimal

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  images ItemImage[]
  views  Int         @default(0)

  city   String
  region String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ItemImage {
  id String @id @default(cuid())

  item   Item   @relation(fields: [itemId], references: [id])
  itemId String

  url       String
  alt       String
  isPrimary Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
